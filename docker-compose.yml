version: '3'
services:
  app:
    container_name: Django-boilerplate
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    command: >
      sh -c "python3 manage.py migrate &&
             python3 manage.py runserver 0.0.0.0:8000"
    env_file:
      - ./.env.example
    depends_on:
      - db
  db:
    container_name: Postgresql
    image: postgres:10-alpine
    env_file:
      - ./.env.example
    environment:
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes: 
      - pgdata:/var/lib/postgresql/data
  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./redis:/redis
  celery:
    environment:
      - C_FORCE_ROOT=true
    container_name: celery-worker
    restart: always
    build:
      context: .
    command: celery -A config worker -l info
    volumes:
      - ./celery:/celery
    env_file:
      - ./.env.example
    depends_on:
      - db
      - redis
      - app
volumes:
  pgdata: